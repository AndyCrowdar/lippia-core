image: maven:3.6.3-jdk-11
pipelines:
  branches:

    release:  
      - step:
          name: Build and deploy release artifact to private Nexus
          trigger: automatic
          caches:
            - maven # Cache any dependencies we download, speeds up build times.
          script:
            - bash create-settings.sh # Create our settings.xml file.  Will fail if environment variables aren't set properly.
            - mvn -B -s settings.xml verify 
            - mvn -B -s settings.xml deploy 

    master:  
      - step:
          name: Build and Deploy release artifact to OSSRH
          services:
            - docker
          trigger: automatic
          caches:
            - maven # Cache any dependencies we download, speeds up build times.
          script:
            - bash create-settings.sh # Create our settings.xml file.  Will fail if environment variables aren't set properly.
            - openssl aes-256-cbc -pass pass:$OPENSSL_PWD -in private-key.gpg.enc -out private-key.gpg -d -md sha256
            - gpg --import private-key.gpg
            - mvn -P ossrh -B -s settings.xml verify
            - mvn -P ossrh -B -s settings.xml deploy

      - step:
          name: Build release artifact, build image and push to Dockerhub
          services:
            - docker
          trigger: automatic
          caches:
            - maven # Cache any dependencies we download, speeds up build times.
          script:
            - bash create-settings.sh # Create our settings.xml file.  Will fail if environment variables aren't set properly.
            - export PROJECT_VERSION=$(perl -e '$_ = join "", <>; m!<project[^>]*>.*\n(?:    |\t)<version[^>]*>\s*([^<]+?)\s*</version>.*</project>!s and print "$1\n"' pom.xml)
            - docker build -t crowdar/lippia:$PROJECT_VERSION .
            - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PASSWORD
            - docker push crowdar/lippia:$PROJECT_VERSION