image: maven:3.3.9-jdk-8

pipelines:
  branches:

    release:  
      - step:
          name: Build and deploy release artifact to private Nexus
          trigger: automatic
          caches:
            - maven # Cache any dependencies we download, speeds up build times.
          script:
            - bash create-settings.sh # Create our settings.xml file.  Will fail if environment variables aren't set properly.
            - mvn -B -s settings.xml verify 
            - mvn -B -s settings.xml deploy 
      - step:
          name: Build release artifact, build image and push to Dockerhub
          services:
            - docker
          trigger: automatic
          caches:
            - maven # Cache any dependencies we download, speeds up build times.
          script:
            - export PROJECT_VERSION=$(mvn org.apache.maven.plugins:maven-help-plugin:3.1.0:evaluate -Dexpression=project.version -q -DforceStdout)
            - docker build --no-cache -t crowdar/lippia:$PROJECT_VERSION .
            - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PASSWORD
            - docker push crowdar/lippia:$PROJECT_VERSION

    master:              
      - step:
          name: Run all sample tests
          image: docker/compose:latest
          services:
            - docker
          caches:
            - docker
          trigger: automatic
          script:
            - export PROJECT_VERSION=$(mvn org.apache.maven.plugins:maven-help-plugin:3.1.0:evaluate -Dexpression=project.version -q -DforceStdout)
            - VERSION=$PROJECT_VERSION docker-compose -f web-docker-compose.yml up --abort-on-container-exit --exit-code-from lippia
            - VERSION=$PROJECT_VERSION docker-compose -f api-docker-compose.yml up --abort-on-container-exit --exit-code-from lippia
            - docker-compose -f mobile-docker-compose.yml up -d hub samsung_s7_9_0
            - sleep 1m
            - VERSION=$PROJECT_VERSION docker-compose -f mobile-sample-docker-compose.yml up --abort-on-container-exit --exit-code-from lippia
            
      - step:
          name: Publish code to Github
          services:
            - docker
          trigger: automatic
          script:
            - git remote add github https://$GITHUB_USER:$GITHUB_TOKEN@github.com/Crowdar/lippia-core.git
            - git push -u github
      
      - step:
          name: Build and Deploy release artifact to OSSRH
          services:
            - docker
          trigger: automatic
          caches:
            - maven # Cache any dependencies we download, speeds up build times.
          script:
            - bash create-settings.sh # Create our settings.xml file.  Will fail if environment variables aren't set properly.
            - openssl aes-256-cbc -pass pass:$OPENSSL_PWD -in private-key.gpg.enc -out private-key.gpg -d -md sha256
            - gpg --import private-key.gpg
            - mvn -P ossrh -B -s settings.xml verify
            - mvn -P ossrh -B -s settings.xml deploy
